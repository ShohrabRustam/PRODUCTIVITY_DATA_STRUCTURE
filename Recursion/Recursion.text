
    1. WHAT IS RECURSION ?
    2. EXAMPLE OF RECURSION
    3. TRACKING RECURSION
    4. STACK USED IN RECURSION
    5. TIME COMPLEXITY
    6. RECURRENCE RELATION

    1. WHAT IS RECURSION ?

    """
    IF A FUNCTION CALLING ITSELF KNOW AS RECUSIVE FUNCTION.

    ###
        THERE MUST BE A BASE CONDITION (TERMINATE CONDITION) TO TERMINATE THE 
        FUNCTION OTHERWISE IT WILL GO INFINITE CALL.
    ###

    """
    Recursion is the process of defining a problem 
    (or the solution to a problem) in terms of (a simpler version of) itself.
    For example, we can define the operation "find your way home" as:
    If you are at home, stop moving. Take one step toward home.
    """

    2. EXAMPLE OF RECURSION :

        int fact(int n){
            if (n==1 || n== 0){
                return 1;
            }
            if (n<0){
                return -1;
            }
            return n* fact(n-1);
        }
    
    3. TRACKING RECURSION :
        
        """
            RECURSIVE FUNCTION TRACE IN FORM OF TREE 
        """
    
    # MAIN INPORTANT THING IS THAT RECURSIVE FUNCTION HAVE TWO PHASE 
        1. EXCUTION PHASE [Accesnding Phase] 
        2. RETURNING PHASE [Decending Phase]

    RECURSIVE FUNCTION JUST LIKE RUBBER BAND