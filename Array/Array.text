                            Array
    1. What is array ?
    2. Delcaring and Initializing the array ?
    3. Accessing the array ?

    Before Delcaring the array let me explain the variable.

    variable is supported by every programming language, the variable should
    have some data type for example : int x = 1;
    as we know very well at run time x get some memory, this type of variable
    know as single value variable such type of variable know as 
    " scalar variable " scalar variable means just magnitude.

    we can store multiple values (set of values) in a single variable name,
    array is a collections of elements and all the elements are of the same type,
    so array is the collection of similar data elements group under one name.
    array is a " vector variable "

    Delcaring And Initializing  and Accessiong the Array : 

    Declaring the Array: 
        ex:- (datatype)int  (name of the array)A[size];
        if we declare the array as ex:- int a[size];
        the value inside the array will be garbage value (unknow value)/random value
    
    Initializing the Array: (Declaring and initializing)
        ex : A[5] = {1,2,3,4,5} or A[] = {1,2,3,4,5} or A[5] = {1,2}=>{1,2,0,0,0};

    Accessing the Array: 
        we can Accessing the array using index ex: A[0],A[3],etc...


                        STATIC VS DYNAMIC ARRAY :
    
    static array : static array means the size of the array is fixed.
    the size of the array is fixed and created at compile time.
    the array is created inside the main memory/stack.
    
    dynamic array : static array means the size of the array is dynamic.
        the size of the array is might be fixed and created at run time.
        the array is created inside the main memory/heap memory.
        ex: int * p ;
        p = new int[n]; //new is the operator

        # after run the program we should have to delete the array which is 
            created inside heap memory if it is not required otherwise that will
            occupied the memory that is cause of memory leak.
             for delete the dynamic array we have to use that syntax
              
              delete [] arrayname;
        
        * heap memory can not be access directly it can be access indirectly by
        pointer.

    
    once the array is created the size of the array can not be modified.


    Formaula for getting the Address of an arrasy elements
        1D array :
            Address[A[i]] = L0(initial Address) + i * sizeOfelement(int/char);

        2D Row Mazor Formula: if the array have m row and n column
            Address[A[i][j]] = L0(initial Address) + (i * n + j )sizeOfelement(int/char);

    Array ADT : Array as Abstract Data Type 
        Abstract Data Type means represenation of data and set of operation
        on data.
    
    Array is the basic data structure provided by almost every programming language.

    Array ADT (Abstract Data Type): 

    Data : [Array Represenation]
        Array space
        size
        Length (No. of elements in the array)

    Data [Array Operation]
        
        Display()
        Add(x)/Apppend(x)
        Insert(x)
        delete(index)
        Search(x)
        Get(x)
        Set(index,x)
        Max()
        Min()
        Reverse()
        shift()->leftShift()/rightShift()
        rotate()
    

    